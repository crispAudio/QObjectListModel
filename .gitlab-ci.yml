image: ubuntu:xenial

cache:
  key: apt-cache
  paths:
  - apt-cache/

before_script: 
  - export APT_CACHE_DIR=`pwd`/apt-cache && mkdir -pv $APT_CACHE_DIR
  - apt-get update -yq
  - apt-get -o dir::cache::archives="$APT_CACHE_DIR" install -y build-essential g++ clang clang-3.8 make
  - apt-get -o dir::cache::archives="$APT_CACHE_DIR" install -y qtbase5-dev-tools qtdeclarative5-dev qt5-default
  - apt-get -o dir::cache::archives="$APT_CACHE_DIR" install -y lcov gcovr

build_gcc:
  stage: build
  script: 
    - mkdir -p build
    - cd build
    - qmake CONFIG+=debug CONFIG+=coverage -recursive ..
    - make -j 4
  artifacts:
    paths:
      - build
  # depending on your build setup it's most likely a good idea to cache outputs to reduce the build time
  # cache:
  #   paths:
  #     - "*.o"

build_clang:
  stage: build
  script: 
    - mkdir -p build_clang
    - cd build_clang
    - qmake QMAKE_CC=clang QMAKE_CXX=clang++ -recursive ..
    - make -j 4

# run tests using the binary built before
test:
  stage: test
  script:
    - find build | xargs touch # Avoid rebuilding
    - cd build
    - export LD_LIBRARY_PATH=`pwd`/src:${LD_LIBRARY_PATH}
    - make coverage-html
  dependencies:
    - build_gcc
